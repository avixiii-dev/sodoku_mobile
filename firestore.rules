rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // Validate user profile data
      function isValidUserProfile() {
        let data = request.resource.data;
        return data.keys().hasAll(['displayName', 'email']) &&
               data.displayName is string &&
               data.email is string &&
               data.displayName.size() >= 2 &&
               data.displayName.size() <= 50;
      }
    }
    
    // Leaderboards
    match /leaderboards/{difficulty} {
      allow read: if request.auth != null;
      
      // Only allow authenticated users to submit scores with valid data
      allow write: if request.auth != null &&
                     isValidScore();
      
      function isValidScore() {
        let data = request.resource.data;
        let score = data.scores[data.scores.size() - 1];
        return score.keys().hasAll(['uid', 'displayName', 'score', 'time']) &&
               score.uid == request.auth.uid &&
               score.score is number &&
               score.score >= 0 &&
               score.time is number &&
               score.time > 0;
      }
    }
    
    // Global rankings
    match /rankings/{rankingId} {
      allow read: if request.auth != null;
      allow write: if false;  // Only updated through server functions
    }
  }
}
